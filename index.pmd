% CSC722 Homework 8
% Jon Craton

Find the eigenvalues and eigenvectors of the following matrices: (The complete solution is required for 
all following matrices) 

Matrix A
========

```python
A = [
  [1, 0],
  [1, 3]
]
```

Recall than eigenvalues and eigenvectors make the following expression true:

$Av = λv$

Where:

A (a vector) is the eigenvector and λ (a scalar) is the eigenvalue.

We can use the identity matrix to convert both sides to a cleaner matrix space:

$Av = λIv$

Then we can rewrite as:

$Av - λIv = 0$

$v(A - λI) = 0$

This equation has a non-zero solution iff the determinant of the left hand side is zero. Therefore, the eigenvalues of A also satisify the following somewhat simpler equation that does not require knowing the eigenvector:

$|A - λI| = 0$

Recall that the determinant for a 2x2 matrix is:

$\begin{vmatrix}
  a & b \\
  c & d
\end{vmatrix} = ad - bc$

We can now take the determinant of the above expression to determine the characteristic polynomial. 

$|A - λ| = \begin{vmatrix}
  1 - λ & 0 \\
  1 & 3 - λ
\end{vmatrix} = (1 - λ)(3 - λ) - (0)(1)$

The roots are obviously 1 and 3. These are our eigenvalues.

Now we need to solve our previous equation for v:

$v(A - λI) = 0$

Where λ = 1:

$v(A - λI) = 0$

$v(A - I) = 0$

$v (\begin{vmatrix}
  1 & 0 \\
  1 & 3
\end{vmatrix} - \begin{vmatrix}
  1 & 0 \\
  0 & 1
\end{vmatrix}) = 0$

$v \begin{vmatrix}
  0 & 0 \\
  1 & 2
\end{vmatrix} = 0$

$\begin{vmatrix}
  x \\
  y
\end{vmatrix} \begin{vmatrix}
   0 & 0 \\
   1 & 2
\end{vmatrix} = 0$

$0x + 0y = 0$

$x + 2y = 0$

$x = -2y$

$c[2,-1]$

Where λ = 3:

$v(A - λI) = 0$

$v(A - 3I) = 0$

$v (\begin{vmatrix}
  1 & 0 \\
  1 & 3
\end{vmatrix} - \begin{vmatrix}
  3 & 0 \\
  0 & 3
\end{vmatrix}) = 0$

$v \begin{vmatrix}
  -2 & 0 \\
   1 & 0
\end{vmatrix} = 0$

$\begin{vmatrix}
  x \\
  y
\end{vmatrix} \begin{vmatrix}
  -2 & 0 \\
   1 & 0
\end{vmatrix} = 0$

$-2x = 0$

$x = 0$

So, y can be anything as long as x is zero:

$c[0,1]$

So, our eigenvectors are:

$c[2,-1]$

$c[0,1]$

Now let's check our work against the LAPACK implentation used in scipy:

```python
import numpy as np
from scipy import linalg

linalg.eig(np.array(A))
```

That looks correct.

Matrix B
========

```python
B = [
  [7, -4],
  [5, -2]
]
```

```python
C = [
  [-3, 1, -3],
  [20, 3,  10],
  [2, -2,  4]
]
```

```python
D = [
  [1, -4, -4],
  [8,-11, -8],
  [-8, 8,  5]
]
```